// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  username  String   @unique
  firstName String?  @map(name: "first_name")
  lastName  String?  @map(name: "last_name")
  isAdmin   Boolean  @default(false) @map(name: "is_admin")
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")
  vendor    Vendor?
  order     Order[]

  @@map(name: "users")
}

model Vendor {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  isApprove Boolean   @default(false)
  owner     User      @relation(fields: [ownerId], references: [id])
  ownerId   String    @unique @db.ObjectId
  product   Product[]
  createdAt DateTime  @default(now()) @map(name: "created_at")
  updatedAt DateTime  @updatedAt @map(name: "updated_at")

  @@map(name: "vendors")
}

model Product {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  price       Int
  quantity    Int
  vendor      Vendor      @relation(fields: [vendorId], references: [id])
  vendorId    String      @db.ObjectId
  orderItem   OrderItem[]
  createdAt   DateTime    @default(now()) @map(name: "created_at")
  updatedAt   DateTime    @updatedAt @map(name: "updated_at")

  @@map(name: "products")
}

model Order {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  user      User        @relation(fields: [userId], references: [id])
  userId    String      @db.ObjectId
  items     OrderItem[]
  createdAt DateTime    @default(now()) @map(name: "created_at")

  @@map(name: "orders")
}

model OrderItem {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  order       Order   @relation(fields: [orderId], references: [id])
  orderId     String  @db.ObjectId
  product     Product @relation(fields: [productId], references: [id])
  productId   String  @db.ObjectId
  quantity    Int
  totalAmount Int     @map(name: "total_amount")

  @@map(name: "order_items")
}
